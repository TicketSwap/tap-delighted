### A CI workflow template that runs linting and Python testing

name: test and lint tap-delighted

on:
  pull_request:
    types: ["opened", "synchronize", "reopened"]
    branches: [main]
    paths:
      - .github/workflows/test.yml
      - tap_dbt_artifacts/**
      - tests/**
      - pyproject.toml
      - uv.lock
      - tox.ini
  workflow_dispatch:

env:
  FORCE_COLOR: 1

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install requirements
        run: |
          uv pip sync requirements.txt --system
          uv pip install ruff --system

      - name: Run Ruff (Linting)
        run: ruff check .

  pytest:
    runs-on: ubuntu-latest
    env:
      TAP_DELIGHTED_API_KEY_NPS: ${{ secrets.TAP_DELIGHTED_API_KEY_NPS }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.12"
          - "3.13"
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install requirements
        run: |
          uv pip sync requirements.txt --system
          uv pip install meltano --system
          uv pip install pytest --system

      - name: Run pytest
        run: |
          pytest